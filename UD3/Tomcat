1. Funcionamiento de Tomcat en Windows con XAMPP
a. Con el xampp instalado, iniciar el servidor Tomcat. Ir al navegador y escribir localhost:8080
b. Ahora vamos al archivo de configuración de usuarios de tomcat. En este caso con el xampp, la ruta es
  xampp/tomcat/conf/tomcat-users.xml y lo editamos y añadimos usuarios: 
  <tomcat-users>
    <role rolename="manager-gui"/>
    <role rolename="manager-script"/>
    <user username="usuario" password="contraseña" roles="manager-gui"/>
    <user username="usuario2" password="contraseña" roles="manager-script"/>
  </tomcat-users>
  Escribimos en el navegador: http://localhost:8080/manager/html/ e insertamos el usuario y contraseña que hayamos introducido
  con el rol manager-gui.
  
d. Para desplegar nuestra aplicación web copiamos el archivo y lo pegamos en la ruta tomcat/webapps.
e. Podemos cambiar el puerto donde escucha tomcat, localizando el fichero server.xml en la ruta tomcat/conf. Editamos el 
  archivo y buscamos la linea que contiene "Connector port='8080'", y cambiamos la línea para que escuche en el puerto que 
  queremos usar.

2. Instalación, configuración y funcionamiento de Tomcat en Linux
a. 
- Usamos el siguiente comando para crear un usuario llamado tomcat: sudo useradd -m -d /opt/tomcat -U -s /bin/false tomcat
- Instalamos el jdk: sudo apt install default-jdk
- Para ver que version tenemos instalada: java -version
- Vamos al directorio /tmp: cd /tmp
- Ejecutamos el comando para instalar tomcat(cambiar según versión): wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.33/bin/apache-tomcat-10.1.33.tar.gz
- Extraemos el archivo que hemos descargado (cambiar versión): sudo tar xzvf apache-tomcat-10*tar.gz -C /opt/tomcat --strip-components=1
- Damos permisos: sudo chown -R tomcat:tomcat /opt/tomcat/    sudo chmod -R u+x /opt/tomcat/bin
- Abrimos el fichero tomcat-users.xml: sudo nano /opt/tomcat/conf/tomcat-users.xml
- Pegamos al final del fichero (cambié los usuarios y las contraseñas a tomcat): 
<role rolename="manager-gui" />
<user username="tomcat" password="tomcat" roles="manager-gui" />

<role rolename="admin-gui" />
<user username="tomcat" password="tomcat" roles="manager-gui,admin-gui" />
- Para quitar la restricción a la página de admin: sudo nano /opt/tomcat/webapps/manager/META-INF/context.xml
- Comentar la linea <Valve />: <!--  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" /> -->
- Ahora hacemos lo mismo para el host manager: sudo nano /opt/tomcat/webapps/host-manager/META-INF/context.xml
- Para seguir, hay que saber donde se encuentra Java: sudo update-java-alternatives -l
- El resultado tendría que ser similar a: /usr/lib/jvm/java-1.11.0-openjdk-amd64
- Creamos el archivo: sudo nano /etc/systemd/system/tomcat.service
- Pegamos el siguiente texto con el resultado anterior: 
[Unit]
Description=Tomcat
After=network.target

[Service]
Type=forking

User=tomcat
Group=tomcat

Environment="JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64"
Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom"
Environment="CATALINA_BASE=/opt/tomcat"
Environment="CATALINA_HOME=/opt/tomcat"
Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

ExecStart=/opt/tomcat/bin/startup.sh
ExecStop=/opt/tomcat/bin/shutdown.sh

RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target

- Recargamos: sudo systemctl daemon-reload
- Iniciamos el servicio Tomcat: sudo systemctl start tomcat
- Habilitamos el inicio de Tomcat: sudo systemctl enable tomcat
- Accedemos desde el navegador a Tomcat: http://localhost:8080

b. 
- Descargamos el archivo .war
- Vamos a la manager app de tomcat y ponemos usuario y contraseña: http://localhost:8080/manager/html
- Bajamos hasta la parte WAR file to deploy y seleccionamos el archivo WAR.
- Escribimos en el navegador: http://localhost:8080/sample/

c.
- Para crear un certificado escribimos en la terminal: sudo keytool -genkey -alias pablo -keyalg RSA -keystore /etc/ssl/pablo.keystore
- Rellenamos los datos y aceptamos
- Abrir el archivo de configuración: sudo nano /opt/tomcat/conf/server.xml
- Pegamos: 
<Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
maxThreads="150" SSLEnabled="true">
<SSLHostConfig>
<Certificate certificateKeystoreFile="/etc/ssl/tomcat.keystore"
certificateKeystorePassword="(contraseñaDelKeystore)"
type="RSA"/>
</SSLHostConfig>
</Connector>
- Abrir el puerto HTTPS en el FireWall con los comandos:
sudo ufw allow 8433
sudo ufw reload
sudo ufw enable
sudo ufw reload
sudo systemctl restart tomcat
- Acceder a tomcat por HTTPS: https://localhost:8443/

4. Integración con un IDE (Visual Studio Code)
- Lo primero que hice fue instalar VSCode desde la página oficial.
- Desde la terminal escribir: cd Downloads
- Instalar el archivo: sudo dpkg -i code_*.deb
- Para abrir el VSCode escribir en la terminal: code
- Ir a la página de tomcat: https://tomcat.apache.org/download-10.cgi
- Descargar el archivo .zip De la versión (Core)
- Vamos a la ruta donde descargamos el archivo .zip y lo extraemos
- Ahora instalamos la extensión para VSCode: Community Server Connectors
- En la pestaña Servers añadiremos un servidor nuevo, seleccionamos "No, usar un servidor en el disco" y cogemos el archivo que extraímos antes.
- Una vez añadido, hacemos click derecho en el servidor tomcat y le damos a start.

5. Cuestiones
a) ¿Qué version de Apache Tomcat instalarás dependiendo de tu versión de Java?
Habría que ver la versión de Java que tenemos instalada e instalaríamos la versión de Tomcat compatible. En este caso
tenía Java 11.0.14.1 e instalé tomcat 10.1.33 (Apache Tomcat - Which Version?)
a.1) Y para la versión 8?
Para la versión 8 son compatibles Tomcat 8.5, Tomcat 9.x
a.2) Y para la versión 21?
Para versiones de Java mayores a la 20 Tomcat 10.1.x o superiores
b) ¿Qué otros servidores de aplicaciones hay en el mercado? ¿Cuáles son software libre y cuales productos comerciales?
WildFly, WebLogic, WebSphere... Tomcat y WildFly por ejemplo son de software libre, y WebLogic y WebSphere son de pago.
c) Una de las cuestiones a tener en cuenta es el rendimiento de las aplicaciones. ¿Sabrías indicar alguna herramienta para pruebas de carga?
Apache Jmeter, LoadRunner, Gatling...
d) Otra de las cuestiones a tener en cuenta es la monitorización del servidor de aplicaciones. ¿Sabrías indicarme alguna herramienta para monitorizar tomcat u otro servidor de aplicaciones? ¿Qué indicadores puede interesar monitorizar?
Jetty(Java), Netty(Java), Broadvision (JavaScript)...
